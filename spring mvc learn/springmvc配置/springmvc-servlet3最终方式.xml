<?xml version="1.0" encoding="UTF-8"?>  
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">  
  
  
    <!-- 
		自动扫描的包名
	--> 
    <context:component-scan base-package="com.app,com.core,JUnit4" ></context:component-scan>  
    
	<!--手动配置代替<mvc:annotation-driven />-->
	<!-- 老版本使用的类：org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<!--注入拦截器-->
		<property name="interceptors">
			<list>
				<bean class="cn.chao.interceptor.MyInterceptor"></bean>
			</list>
		</property>
	</bean>
	<!-- 老版本使用的类：org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">

	</bean>
 
    <!-- 视图解释类 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/"/>  
        <property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
    </bean>  
      
   
      

	
    <!-- 对静态资源文件的访问  方案一 （二选一）使用默认的Servlet来响应静态文件。 -->  
    <mvc:default-servlet-handler/>  

    <!-- 对静态资源文件的访问  方案二 （二选一）-->  
	<!--
		解析：
		/images/**映射到ResourceHttpRequestHandler进行处理，
		location指定静态资源的位置.可以是web application根目录下、jar包里面，
		这样可以把静态资源压缩到jar包中。cache-period 可以使得静态资源进行web cache 
	-->  
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>  
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>  
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/> 


	
  
</beans> 